
/* 
    弹性盒子 ：display : flex
        1. 一个盒子被设置为弹性盒子(flex容器)之后，其直接子元素都成为了flex items，会按照默认的flex属性进行排列
        2. flex items排列方向叫做主轴(main axis)，垂直主轴方向叫做交叉轴(cross axis)
        2. 常见flex属性
            flex-direction : flex items的排列方式
                row(默认值) 排成一行        column  排成一列
            flex-wrap : flex items单行显示还是多行显示
                nowrap(默认值) 单行     wrap 多行
            flex-flow = flex-direction flex-wrap   是后两者的缩写
                flex-flow: row wrap;


*/

* {box-sizing: border-box;}


.flex {
    display: flex;
}

.flex > div {
    border-radius: 5px;
    background-color: rgb(207,232,220);
    padding: 1em;
}



/* 
    Grip布局 : 用于同时在两个维度上把元素按行和列排列整齐
        grid-template-columns : 设置列宽
            fr 是该元素在父容器中的占比单位
        grid-template-rows : 设置行高
        grid-gap : 行间距、列间距

    单独设置每个元素在Grip中的位置和占用空间
    .box1 {
        grid-column: 2 / 4;     第2~4列
        grid-row: 1;            第1行
    }

*/

.grip {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 100px 100px;
    grid-gap: 10px;
}

.grip > div {
    border-radius: 5px;
    background-color: rgb(207,232,220);
    padding: 1em;
}

.box1 {
    grid-column: 2 / 4;
    grid-row: 1;
}

.box2 {
    grid-column: 1;
    grid-row: 1 / 3;
}

.box3 {
    grid-row: 2;
    grid-column: 3;
}


/* 
    浮动 : 其他元素环绕浮动元素
        none left right inherit
*/
.float {
    float: left;
    width: 150px;
    height: 150px;
    margin-right: 30px;
    border-radius: 5px;
    background-color: rgb(207,232,220);
    padding: 1em;
}


/* 
    定位：
        相对定位 : 相对于元素在正常流中原本的位置
        绝对定位 : 相对于根元素<html>的边缘
        固定定位 : 相对于浏览器窗口的边缘位置
        粘性定位 : 在视图中滚动，直到出现在了我们给它设定的相对于容器的位置，这时候它就会停止

*/

/* 相对定位 */
.positioned {
    background: rgba(255,84,104,.3);
    border: 2px solid rgb(255,84,104);

    position: relative;
    top: 30px;
    left: 30px;
}
/* 绝对定位 */
.positioned {
    position: absolute;
    top: 30px;
    left: 30px;
}
/* 固定定位 */
.positioned {
    position: fixed;
    top: 30px;
    left: 30px;
}
/* 粘性定位 */
.sticky {
    background: rgba(255,84,104,.3);
    border: 2px solid rgb(255,84,104);

    position: sticky;
    top: 30px;
    left: 30px;
}


/* 
    表格布局
        display: table;
        table-row   表格化
        table-cell  单元格
        table-caption   标题

*/
form {
    display: table;
    margin: 0 auto;
}

form div {
    display: table-row;
}

form label, form input {
    display: table-cell;
    margin-bottom: 10px;
}

form label {
    width: 200px;
    padding-right: 5%;
    text-align: right;
}

form input {
    width: 300px;
}

form p {
    display: table-caption;
    caption-side: bottom;
    width: 300px;
    color: #999;
    font-style: italic;
}

/* 
    多列布局 ：把内容按列排序的方式，两种设置方式
        column-count 设置多少列
        column-width 每一列的宽度，根据父容器宽度尽量设置多个列
*/

.container {
    column-width: 200px;
}